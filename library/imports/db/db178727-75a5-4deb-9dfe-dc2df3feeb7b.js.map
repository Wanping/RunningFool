{"version":3,"sources":["assets/script/utils/wechatSdk.js"],"names":["singleton","require","eventCenter","eventDef","cc","Class","Component","ctor","console","log","isWeChat","userInfo","userInfoCallback","wxSessionVaild","checkWxSession","initLoginButton","sys","browserType","BROWSER_TYPE_WECHAT_GAME","wx","checkSession","success","fail","login","successFunc","getUserInfo","self","window","sysInfo","getSystemInfoSync","width","screenWidth","height","screenHeight","getSetting","res","authSetting","button","createUserInfoButton","type","text","style","left","top","backgroundColor","color","fontSize","textAlign","lineHeight","onTap","userData","setUserWxData","emitEvent","PreloadScene","destroy","JSON","stringify"],"mappings":"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","sourceRoot":"/","sourcesContent":["let singleton = require(\"singleton\");\nlet eventCenter = require(\"eventCenter\");\nlet eventDef = require(\"eventDef\");\n\ncc.Class({\n    extends: cc.Component,\n\n    ctor() {\n        console.log(\"wechatSdk ctor\");\n\n        if (!this.isWeChat()) {\n            console.log(\"The env isn't wechat\");\n            return;\n        }\n\n        this.userInfo = null;\n        this.userInfoCallback = null;\n        this.wxSessionVaild = this.checkWxSession();\n        this.initLoginButton();\n    },\n\n    // 判断是否是wx\n    isWeChat() {\n        return cc.sys.browserType === cc.sys.BROWSER_TYPE_WECHAT_GAME;\n    },\n\n    // 判断Session是否过期\n    checkWxSession() {\n        wx.checkSession({\n            success() {\n                //session_key 未过期，并且在本生命周期一直有效\n                return true;\n            },\n            fail() {\n                // session_key 已经失效，需要重新执行登录流程\n                return false;\n            }\n        })\n    },\n\n    // 登录\n    login () {\n        console.log(\"wechatSdk login..\");\n        this.successFunc = successFunc;\n        if (this.wxSessionVaild) {\n            this.getUserInfo();\n        }\n    },\n\n    // 初始化授权按钮\n    initLoginButton() {\n        let self = this;\n        let wx = window['wx'];\n        let sysInfo = wx.getSystemInfoSync();\n        let width = sysInfo.screenWidth;\n        let height = sysInfo.screenHeight;\n        wx.getSetting({\n            success(res) {\n                console.log(\"UserAuthSetting: \" + res.authSetting);\n                if (res.authSetting[\"scope.userInfo\"]) {\n                    console.log(\"The user has the scope!\");\n                    self.getUserInfo();\n                } else {\n                    console.log(\"The user hasn't the scope!\");\n                    let button = wx.createUserInfoButton({\n                        type: 'text',\n                        text: '',\n                        style: {\n                            left: width / 2,\n                            top: height / 2,\n                            width: width,\n                            height: height,\n                            backgroundColor: '#00000000',\n                            color: '#ffffff',\n                            fontSize: 20,\n                            textAlign: \"center\",\n                            lineHeight: height,\n                        }\n                        // 授权按钮全屏\n                    });\n                    button.onTap(function (res) {\n                        if (res.userInfo) {\n                            self.userInfo = res.userInfo;\n                            singleton.userData.setUserWxData(self.userInfo);\n                            eventCenter.emitEvent(eventDef.PreloadScene);\n                            button.destroy();\n                        } else {\n                            console.log(\"The user cncelled the authorization!\");\n                        }\n                    })\n                }\n            }\n        })\n    },\n\n    // 获取用户信息\n    getUserInfo() {\n        let self = this;\n        wx.getUserInfo({\n            success(res) {\n                console.log(\"The userInfo is \" + JSON.stringify(res.userInfo));\n                self.userInfo = res.userInfo;\n                singleton.userData.setUserWxData(self.userInfo);\n                eventCenter.emitEvent(eventDef.PreloadScene);\n            }\n        });\n    },\n});\n"]}