{"version":3,"sources":["assets/script/utils/wechatSdk.js"],"names":["singleton","require","cc","Class","Component","onLoad","console","log","wxSessionVaild","userInfo","ctor","isWeChat","checkWxSession","initLoginButton","sys","browserType","BROWSER_TYPE_WECHAT_GAME","wx","checkSession","success","fail","login","successFunc","getUserInfo","self","window","sysInfo","getSystemInfoSync","width","screenWidth","height","screenHeight","getSetting","res","authSetting","button","createUserInfoButton","type","text","style","left","top","backgroundColor","color","fontSize","textAlign","lineHeight","onTap","userData","setUserWxData","destroy","JSON","stringify"],"mappings":"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","sourceRoot":"/","sourcesContent":["let singleton = require(\"singleton\");\n\ncc.Class({\n    extends: cc.Component,\n\n    onLoad () {\n        console.log(\"wechatSdk onLoad\");\n\n        this.wxSessionVaild = false;\n        this.userInfo = null;\n    },\n\n    ctor () {\n        console.log(\"wechatSdk ctor\");\n\n        if(!this.isWeChat()) {\n            console.log(\"The env isn't wechat\");\n            return;\n        }\n\n        this.wxSessionVaild = this.checkWxSession();\n        this.initLoginButton();\n    },\n\n    // 判断是否是wx\n    isWeChat () {\n        return cc.sys.browserType === cc.sys.BROWSER_TYPE_WECHAT_GAME;\n    },\n\n    // 判断Session是否过期\n    checkWxSession () {\n        wx.checkSession({\n            success () {\n                //session_key 未过期，并且在本生命周期一直有效\n                return true;\n            },\n            fail () {\n                // session_key 已经失效，需要重新执行登录流程\n                return false;\n            }\n        })\n    },\n\n    // 登录\n    login (successFunc) {\n        console.log(\"wechatSdk login..\");\n        this.successFunc = successFunc;\n        if (this.wxSessionVaild) {\n            this.getUserInfo();\n            if(successFunc) successFunc();\n        }\n    },\n\n    // 初始化授权按钮\n    initLoginButton () {\n        let self = this;\n        let wx = window['wx'];\n        let sysInfo = wx.getSystemInfoSync();\n        let width = sysInfo.screenWidth;\n        let height = sysInfo.screenHeight;\n        wx.getSetting ({\n            success (res) {\n                console.log(\"UserAuthSetting: \" + res.authSetting);\n                if (res.authSetting[\"scope.userInfo\"]) {\n                    console.log(\"The user has the scope!\");\n                    self.getUserInfo();\n                }\n                else {\n                    console.log(\"The user hasn't the scope!\");\n                    let button = wx.createUserInfoButton({\n                        type: 'text',\n                        text: '',\n                        style: {\n                            left: width / 2,\n                            top: height / 2,\n                            width: width,\n                            height: height,\n                            backgroundColor: '#00000000',\n                            color: '#ffffff',\n                            fontSize: 20,\n                            textAlign: \"center\",\n                            lineHeight: height,\n                        }\n                        // 授权按钮全屏\n                    });\n                    button.onTap(function (res) {\n                        if (res.userInfo) {\n                            self.userInfo = res.userInfo;\n                            singleton.userData.setUserWxData(self.userInfo);\n                            button.destroy();\n                            if(self.successFunc) {\n                                self.successFunc();\n                            }\n                        }\n                        else {\n                            console.log(\"The user cncelled the authorization!\");\n                        }\n                    })\n                }\n            }\n        })\n    },\n\n    // 获取用户信息\n    getUserInfo () {\n        let self = this;\n        wx.getUserInfo({\n            success(res){\n                console.log(\"The userInfo is \" + JSON.stringify(res.userInfo));\n                self.userInfo = res.userInfo;\n                singleton.userData.setUserWxData(self.userInfo);\n            }\n        });\n    }\n});\n"]}